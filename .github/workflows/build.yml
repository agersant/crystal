name: Build

on:
  pull_request:
  push:

jobs:
  tests-windows:
    name: Run Tests (Windows)
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Add vcvars location to path
      run: echo "##[add-path]C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build"
    - name: Install Love 2D
      run:  |
        curl -L -o love.zip https://bitbucket.org/rude/love/downloads/love-11.3-win64.zip
        unzip love.zip
        echo "##[add-path]${{ github.workspace }}\love-11.3-win64"
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        minimal: true
        default: true
    - name: Build Diamond
      run: bash build_diamond.sh
    - name: Install Meson
      run:  |
        curl -L -o meson.msi https://github.com/mesonbuild/meson/releases/download/0.53.1/meson-0.53.1-64.msi
        msiexec.exe /i meson.msi /quiet
        echo "##[add-path]C:\Program Files\Meson"
    - name: Build Beryl
      run: .\build_beryl_windows.ps1
    - name: Run Tests
      run: lovec . /test /coverage
      working-directory: ./game

  tests-linux:
    name: Run Tests (Linux)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Love 2D
      run:  |
        curl -L -o love https://bitbucket.org/rude/love/downloads/love-11.3-x86_64.AppImage
        chmod +x love
        echo "::add-path::${{ github.workspace }}"
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        minimal: true
        default: true
    - name: Build Diamond
      run: ./build_diamond.sh
    - name: Install Meson
      run:  |
        sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build
        sudo pip3 install meson
    - name: Build Beryl
      run: ./build_beryl_linux.sh
    - name: Run Tests
      run: love . /test /coverage
      working-directory: ./game
    - name: Upload Test Coverage Results
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

